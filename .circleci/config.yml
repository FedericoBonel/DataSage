version: 2.1
orbs:
    node: circleci/node@5
jobs:
    test-node-server:
        # Install node dependencies and run tests
        executor: node/default
        working_directory: ~/project/server
        steps:
            - checkout:
                  path: ~/project
            - node/install-packages:
                  pkg-manager: npm
            - restore_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
            - run:
                  name: Install Server Dependencies
                  command: npm install
            - save_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
                  paths:
                      - ./node_modules
            - run:
                  name: Run tests
                  command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
    build-react-client:
        executor: node/default
        working_directory: ~/project/client
        steps:
            - checkout:
                  path: ~/project
            - node/install-packages:
                  pkg-manager: npm
            - restore_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
            - run:
                  name: Install Client Dependencies
                  command: npm install
            - save_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
                  paths:
                      - ./node_modules
            - run:
                  name: Build Client
                  command: npm run build

    deploy:
        # This is an example deploy job, not actually used by the workflow
        docker:
            - image: cimg/base:stable
        steps:
            # Replace this with steps to deploy to users
            - run:
                  name: deploy
                  command: "#e.g. ./deploy.sh"
workflows:
    build-and-test:
        jobs:
            - test-node-server
            - build-react-client
            # - deploy:
            #     requires:
            #       - test-node-server
